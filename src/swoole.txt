Extension [ <persistent> extension #38 swoole version 1.7.19 ] {

  - INI {
    Entry [ swoole.aio_thread_num <ALL> ]
      Current = '2'
    }
    Entry [ swoole.display_errors <ALL> ]
      Current = 'On'
    }
    Entry [ swoole.message_queue_key <ALL> ]
      Current = '0'
    }
    Entry [ swoole.unixsock_buffer_size <ALL> ]
      Current = '8388608'
    }
  }

  - Constants [76] {
    Constant [ integer SWOOLE_BASE ] { 4 }
    Constant [ integer SWOOLE_THREAD ] { 2 }
    Constant [ integer SWOOLE_PROCESS ] { 3 }
    Constant [ integer SWOOLE_PACKET ] { 16 }
    Constant [ integer SWOOLE_IPC_UNSOCK ] { 1 }
    Constant [ integer SWOOLE_IPC_MSGQUEUE ] { 2 }
    Constant [ integer SWOOLE_IPC_CHANNEL ] { 3 }
    Constant [ integer SWOOLE_SOCK_TCP ] { 1 }
    Constant [ integer SWOOLE_SOCK_TCP6 ] { 3 }
    Constant [ integer SWOOLE_SOCK_UDP ] { 2 }
    Constant [ integer SWOOLE_SOCK_UDP6 ] { 4 }
    Constant [ integer SWOOLE_SOCK_UNIX_DGRAM ] { 5 }
    Constant [ integer SWOOLE_SOCK_UNIX_STREAM ] { 6 }
    Constant [ integer SWOOLE_TCP ] { 1 }
    Constant [ integer SWOOLE_TCP6 ] { 3 }
    Constant [ integer SWOOLE_UDP ] { 2 }
    Constant [ integer SWOOLE_UDP6 ] { 4 }
    Constant [ integer SWOOLE_UNIX_DGRAM ] { 5 }
    Constant [ integer SWOOLE_UNIX_STREAM ] { 6 }
    Constant [ integer SWOOLE_SOCK_SYNC ] { 0 }
    Constant [ integer SWOOLE_SOCK_ASYNC ] { 1 }
    Constant [ integer SWOOLE_SYNC ] { 2048 }
    Constant [ integer SWOOLE_ASYNC ] { 1024 }
    Constant [ integer SWOOLE_KEEP ] { 512 }
    Constant [ integer SWOOLE_SSL ] { 512 }
    Constant [ integer SWOOLE_EVENT_READ ] { 512 }
    Constant [ integer SWOOLE_EVENT_WRITE ] { 1024 }
    Constant [ string SWOOLE_VERSION ] { 1.7.19 }
    Constant [ integer SWOOLE_AIO_BASE ] { 0 }
    Constant [ integer SWOOLE_AIO_GCC ] { 1 }
    Constant [ integer SWOOLE_AIO_LINUX ] { 2 }
    Constant [ integer SIGHUP ] { 1 }
    Constant [ integer SIGINT ] { 2 }
    Constant [ integer SIGQUIT ] { 3 }
    Constant [ integer SIGILL ] { 4 }
    Constant [ integer SIGTRAP ] { 5 }
    Constant [ integer SIGABRT ] { 6 }
    Constant [ integer SIGBUS ] { 7 }
    Constant [ integer SIGFPE ] { 8 }
    Constant [ integer SIGKILL ] { 9 }
    Constant [ integer SIGUSR1 ] { 10 }
    Constant [ integer SIGSEGV ] { 11 }
    Constant [ integer SIGUSR2 ] { 12 }
    Constant [ integer SIGPIPE ] { 13 }
    Constant [ integer SIGALRM ] { 14 }
    Constant [ integer SIGTERM ] { 15 }
    Constant [ integer SIGSTKFLT ] { 16 }
    Constant [ integer SIGCHLD ] { 17 }
    Constant [ integer SIGCONT ] { 18 }
    Constant [ integer SIGSTOP ] { 19 }
    Constant [ integer SIGTSTP ] { 20 }
    Constant [ integer SIGTTIN ] { 21 }
    Constant [ integer SIGTTOU ] { 22 }
    Constant [ integer SIGURG ] { 23 }
    Constant [ integer SIGXCPU ] { 24 }
    Constant [ integer SIGXFSZ ] { 25 }
    Constant [ integer SIGVTALRM ] { 26 }
    Constant [ integer SIGPROF ] { 27 }
    Constant [ integer SIGWINCH ] { 28 }
    Constant [ integer SIGIO ] { 29 }
    Constant [ integer SIGPWR ] { 30 }
    Constant [ integer SIGSYS ] { 31 }
    Constant [ integer SWOOLE_FILELOCK ] { 2 }
    Constant [ integer SWOOLE_MUTEX ] { 3 }
    Constant [ integer SWOOLE_SEM ] { 4 }
    Constant [ integer SWOOLE_RWLOCK ] { 1 }
    Constant [ integer SWOOLE_SPINLOCK ] { 5 }
    Constant [ integer HTTP_GLOBAL_GET ] { 2 }
    Constant [ integer HTTP_GLOBAL_POST ] { 4 }
    Constant [ integer HTTP_GLOBAL_COOKIE ] { 8 }
    Constant [ integer HTTP_GLOBAL_ALL ] { 126 }
    Constant [ integer WEBSOCKET_OPCODE_TEXT ] { 1 }
    Constant [ integer WEBSOCKET_OPCODE_BINARY ] { 2 }
    Constant [ integer WEBSOCKET_STATUS_CONNECTION ] { 1 }
    Constant [ integer WEBSOCKET_STATUS_HANDSHAKE ] { 2 }
    Constant [ integer WEBSOCKET_STATUS_FRAME ] { 3 }
  }

  - Functions {
    Function [ <internal:swoole> function swoole_version ] {
    }
    Function [ <internal:swoole> function swoole_cpu_num ] {
    }
    Function [ <internal:swoole> function swoole_server_create ] {

      - Parameters [4] {
        Parameter #0 [ <required> $serv_host ]
        Parameter #1 [ <required> $serv_port ]
        Parameter #2 [ <optional> $serv_mode ]
        Parameter #3 [ <optional> $sock_type ]
      }
    }
    Function [ <internal:swoole> function swoole_server_set ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $zset ]
      }
    }
    Function [ <internal:swoole> function swoole_server_start ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_send ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $conn_fd ]
        Parameter #2 [ <required> $send_data ]
        Parameter #3 [ <optional> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_sendfile ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $conn_fd ]
        Parameter #2 [ <required> $filename ]
      }
    }
    Function [ <internal:swoole> function swoole_server_close ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $fd ]
      }
    }
    Function [ <internal:swoole> function swoole_server_handler ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $ha_name ]
        Parameter #2 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_server_on ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $ha_name ]
        Parameter #2 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_server_addlisten ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $host ]
        Parameter #2 [ <required> $port ]
        Parameter #3 [ <required> $sock_type ]
      }
    }
    Function [ <internal:swoole> function swoole_server_addtimer ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $interval ]
      }
    }
    Function [ <internal:swoole> function swoole_server_gettimer ] {
    }
    Function [ <internal:swoole> function swoole_server_task ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
        Parameter #2 [ <optional> $worker_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_taskwait ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
        Parameter #2 [ <optional> $timeout ]
        Parameter #3 [ <optional> $worker_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_finish ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
      }
    }
    Function [ <internal:swoole> function swoole_server_reload ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_shutdown ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_heartbeat ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_connection_info ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $fd ]
        Parameter #2 [ <optional> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_connection_list ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $start_fd ]
        Parameter #2 [ <required> $find_count ]
      }
    }
    Function [ <internal:swoole> function swoole_event_add ] {

      - Parameters [2] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_event_set ] {
    }
    Function [ <internal:swoole> function swoole_event_del ] {

      - Parameters [1] {
        Parameter #0 [ <required> $fd ]
      }
    }
    Function [ <internal:swoole> function swoole_event_exit ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_wait ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_write ] {

      - Parameters [2] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <required> $data ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_add ] {

      - Parameters [2] {
        Parameter #0 [ <required> $interval ]
        Parameter #1 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_del ] {

      - Parameters [1] {
        Parameter #0 [ <required> $interval ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_after ] {
    }
    Function [ <internal:swoole> function swoole_timer_tick ] {
    }
    Function [ <internal:swoole> function swoole_timer_clear ] {
    }
    Function [ <internal:swoole> function swoole_async_set ] {
    }
    Function [ <internal:swoole> function swoole_async_read ] {
    }
    Function [ <internal:swoole> function swoole_async_write ] {
    }
    Function [ <internal:swoole> function swoole_async_readfile ] {
    }
    Function [ <internal:swoole> function swoole_async_writefile ] {
    }
    Function [ <internal:swoole> function swoole_async_dns_lookup ] {
    }
    Function [ <internal:swoole> function swoole_client_select ] {
    }
    Function [ <internal:swoole> function swoole_set_process_name ] {
    }
    Function [ <internal:swoole> function swoole_get_local_ip ] {
    }
    Function [ <internal:swoole> function swoole_strerror ] {
    }
    Function [ <internal:swoole> function swoole_errno ] {
    }
  }

  - Classes [13] {
    Class [ <internal:swoole> class swoole_server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [32] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $serv_host ]
            Parameter #1 [ <required> $serv_port ]
            Parameter #2 [ <optional> $serv_mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $zset ]
          }
        }

        Method [ <internal:swoole> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $from_id ]
          }
        }

        Method [ <internal:swoole> public method sendto ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <optional> $send_data ]
          }
        }

        Method [ <internal:swoole> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $conn_fd ]
          }
        }

        Method [ <internal:swoole> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method task ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method hbcheck ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method handler ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <required> $find_count ]
          }
        }

        Method [ <internal:swoole> public method addtimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole> public method deltimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole> public method gettimer ] {
        }

        Method [ <internal:swoole> public method after ] {
        }

        Method [ <internal:swoole> public method tick ] {
        }

        Method [ <internal:swoole> public method clearTimer ] {
        }

        Method [ <internal:swoole> public method sendmessage ] {
        }

        Method [ <internal:swoole> public method addprocess ] {
        }

        Method [ <internal:swoole> public method stats ] {
        }

        Method [ <internal:swoole> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> <iterateable> class swoole_connection_iterator implements Iterator, Traversable, Countable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class swoole_client ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
      }

      - Methods [13] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method set ] {
        }

        Method [ <internal:swoole> public method connect ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }

        Method [ <internal:swoole> public method send ] {
        }

        Method [ <internal:swoole> public method sendfile ] {
        }

        Method [ <internal:swoole> public method sendto ] {
        }

        Method [ <internal:swoole> public method isConnected ] {
        }

        Method [ <internal:swoole> public method getsockname ] {
        }

        Method [ <internal:swoole> public method getpeername ] {
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method on ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_process ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal:swoole> static public method wait ] {
        }

        Method [ <internal:swoole> static public method signal ] {
        }

        Method [ <internal:swoole> static public method kill ] {
        }

        Method [ <internal:swoole> static public method daemon ] {
        }

        Method [ <internal:swoole> static public method setaffinity ] {
        }
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method useQueue ] {
        }

        Method [ <internal:swoole> public method start ] {
        }

        Method [ <internal:swoole> public method write ] {
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method read ] {
        }

        Method [ <internal:swoole> public method push ] {
        }

        Method [ <internal:swoole> public method pop ] {
        }

        Method [ <internal:swoole> public method exit ] {
        }

        Method [ <internal:swoole> public method exec ] {
        }

        Method [ <internal:swoole> public method name ] {
        }
      }
    }

    Class [ <internal:swoole> <iterateable> class swoole_table implements Iterator, Traversable, Countable ] {

      - Constants [10] {
        Constant [ integer TYPE_INT ] { 1 }
        Constant [ integer TYPE_STRING ] { 7 }
        Constant [ integer TYPE_FLOAT ] { 6 }
        Constant [ integer FIND_GT ] { 3 }
        Constant [ integer FIND_LT ] { 4 }
        Constant [ integer FIND_EQ ] { 1 }
        Constant [ integer FIND_NEQ ] { 2 }
        Constant [ integer FIND_LEFTLIKE ] { 5 }
        Constant [ integer FIND_RIGHTLIKE ] { 6 }
        Constant [ integer FIND_LIKE ] { 7 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [18] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $table_size ]
          }
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method column ] {

          - Parameters [3] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <optional> $type ]
            Parameter #2 [ <optional> $size ]
          }
        }

        Method [ <internal:swoole> public method create ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:swoole> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method del ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:swoole> public method incr ] {

          - Parameters [3] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $column ]
            Parameter #2 [ <optional> $incrby ]
          }
        }

        Method [ <internal:swoole> public method decr ] {

          - Parameters [3] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $column ]
            Parameter #2 [ <optional> $decrby ]
          }
        }

        Method [ <internal:swoole> public method lock ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method unlock ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:swoole> class swoole_lock ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method lock ] {
        }

        Method [ <internal:swoole> public method trylock ] {
        }

        Method [ <internal:swoole> public method lock_read ] {
        }

        Method [ <internal:swoole> public method trylock_read ] {
        }

        Method [ <internal:swoole> public method unlock ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_atomic ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole> public method add ] {
        }

        Method [ <internal:swoole> public method sub ] {
        }

        Method [ <internal:swoole> public method get ] {
        }

        Method [ <internal:swoole> public method set ] {
        }

        Method [ <internal:swoole> public method cmpset ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_http_server extends swoole_server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $global ]
      }

      - Methods [33] {
        Method [ <internal:swoole, overwrites swoole_server, prototype swoole_server> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole> public method setglobal ] {
        }

        Method [ <internal:swoole, overwrites swoole_server, prototype swoole_server> public method start ] {
        }

        Method [ <internal:swoole, inherits swoole_server, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $serv_host ]
            Parameter #1 [ <required> $serv_port ]
            Parameter #2 [ <optional> $serv_mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $zset ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendto ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <optional> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $conn_fd ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method task ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method hbcheck ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method handler ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <required> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method addtimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method deltimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method gettimer ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method after ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method tick ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method clearTimer ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendmessage ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method addprocess ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method stats ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> class swoole_http_response ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:swoole> public method cookie ] {
        }

        Method [ <internal:swoole> public method rawcookie ] {
        }

        Method [ <internal:swoole> public method status ] {
        }

        Method [ <internal:swoole> public method gzip ] {
        }

        Method [ <internal:swoole> public method header ] {
        }

        Method [ <internal:swoole> public method write ] {
        }

        Method [ <internal:swoole> public method end ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_http_request ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:swoole> public method rawcontent ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_buffer ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [8] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole, dtor> public method __destruct ] {
        }

        Method [ <internal:swoole> public method substr ] {
        }

        Method [ <internal:swoole> public method write ] {
        }

        Method [ <internal:swoole> public method read ] {
        }

        Method [ <internal:swoole> public method append ] {
        }

        Method [ <internal:swoole> public method expand ] {
        }

        Method [ <internal:swoole> public method clear ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_websocket_server extends swoole_http_server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [34] {
        Method [ <internal:swoole, overwrites swoole_http_server, prototype swoole_server> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $event_name ]
            Parameter #1 [ <required> $callback ]
          }
        }

        Method [ <internal:swoole> public method push ] {

          - Parameters [4] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $data ]
            Parameter #2 [ <optional> $opcode ]
            Parameter #3 [ <optional> $finish ]
          }
        }

        Method [ <internal:swoole, inherits swoole_http_server> public method setglobal ] {
        }

        Method [ <internal:swoole, inherits swoole_http_server, prototype swoole_server> public method start ] {
        }

        Method [ <internal:swoole, inherits swoole_server, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $serv_host ]
            Parameter #1 [ <required> $serv_port ]
            Parameter #2 [ <optional> $serv_mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $zset ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendto ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ip ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <optional> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendwait ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method exist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $conn_fd ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method task ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method listen ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method hbcheck ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method handler ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <required> $find_count ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method addtimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method deltimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole, inherits swoole_server> public method gettimer ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method after ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method tick ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method clearTimer ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method sendmessage ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method addprocess ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method stats ] {
        }

        Method [ <internal:swoole, inherits swoole_server> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $uid ]
          }
        }
      }
    }

    Class [ <internal:swoole> class swoole_websocket_frame ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }
  }
}

